plugins {
    id 'idea'
    id 'net.neoforged.moddev.legacyforge' version '2.0.78'
}

group = mod_group_id
version = mod_version

base {
    archivesName = mod_name
}

java {
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}
legacyForge {
    version = "${minecraft_version}-${forge_version}"

    if (Boolean.getBoolean(enableAccessTransformers)){
        accessTransformers = [file('src/main/resources/META-INF/accesstransformer.cfg')]
    }

    if (mapping_channel=="parchment"){
        parchment {
            minecraftVersion = '1.20.1'
            mappingsVersion = '2023.09.03'
        }
    }

    runs {
        client {
            client()
        }
        data {
            data()
        }
        server {
            server()
        }
    }

    mods {
        testproject {
            sourceSet sourceSets.main
        }
    }
}

dependencies {
    compileOnly 'org.jetbrains:annotations:24.0.1'
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

mixin {
    add sourceSets.main, 'mixins.examples.refmap.json'
    config 'mixins.examples.json'
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven { url "https://maven.shedaniel.me/" }
    maven { url 'https://jitpack.io' }
}


processResources {
    var replaceProperties = [
            minecraft_version: minecraft_version, minecraft_version_range: minecraft_version_range,
            forge_version: forge_version, forge_version_range: forge_version_range,
            loader_version_range: loader_version_range,
            mod_id: mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
            mod_authors: mod_authors, mod_description: mod_description,
    ]

    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }}

jar {
    manifest.attributes([
            "MixinConfigs": "mixins.examples.json"
    ])
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
